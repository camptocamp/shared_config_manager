{
  extends: ['config:base'],
  timezone: 'Europe/Zurich',
  schedule: 'after 5pm on the first day of the month',
  labels: ['dependencies'],
  separateMajorMinor: true,
  separateMinorPatch: true,
  prHourlyLimit: 0,
  prConcurrentLimit: 0,
  baseBranches: ['release_2', '3.4', 'master'],
  'pre-commit': { enabled: true },
  html: {
    fileMatch: ['\\.html?$', '\\.html?.mako$'],
  },
  lockFileMaintenance: {
    enabled: true,
    automerge: true,
    schedule: 'after 5pm on the first day of the month',
  },
  regexManagers: [
    /** Do updates on pre-commit additional dependencies */
    {
      fileMatch: ['^\\.pre\\-commit\\-config\\.yaml$'],
      matchStrings: [" +- '?(?<depName>[^' @=]+)(@|==)(?<currentValue>[^' @=]+)'? # (?<datasource>.+)"],
    },
    /** Do update on packages update (trigger a rebuild) */
    {
      fileMatch: ['^ci/dpkg\\-versions\\.yaml$'],
      matchStrings: [" *(?<depName>[^'\\s]+): '?(?<currentValue>[^'\\s/]*[0-9][^'\\s/]*)'?"],
      datasourceTemplate: 'repology',
      versioningTemplate: 'loose',
    },
    /** Do update on the schema present in the ci/config.yaml */
    {
      fileMatch: ['^ci/config\\.yaml$'],
      matchStrings: [
        '.*https://raw\\.githubusercontent\\.com/(?<depName>[^\\s]+)/(?<currentValue>[0-9\\.]+)/.*',
      ],
      datasourceTemplate: 'github-tags',
    },
  ],
  packageRules: [
    /** Docker images versioning */
    {
      matchDatasources: ['docker'],
      versioning: 'loose',
    },
    {
      matchFiles: ['acceptance_tests/Dockerfile', 'app/Dockerfile'],
      matchDatasources: ['docker'],
      versioning: 'ubuntu',
    },
    {
      matchDatasources: ['docker'],
      matchPackageNames: ['redis'],
      versioning: 'regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$',
    },
    /** Auto merge the dev dependency update */
    {
      matchDepTypes: ['devDependencies'],
      automerge: true,
    },
    /** Group and auto merge the patch updates */
    {
      matchUpdateTypes: ['patch'],
      groupName: 'all patch versions',
      automerge: true,
    },
    /** Group and auto merge the minor updates */
    {
      matchUpdateTypes: ['minor'],
      groupName: 'all minor versions',
      automerge: true,
    },
    /** Group Poetry packages */
    {
      matchPackageNames: ['poetry', 'pip'],
      matchPackagePrefixes: ['poetry-'],
      groupName: 'Poetry',
      automerge: true,
      separateMajorMinor: false,
      separateMinorPatch: false,
    },
    /** Accept only the patch on stabilization branches */
    {
      matchBaseBranches: ['/^[0-9]+\\.[0-9]+$/'],
      matchUpdateTypes: ['major', 'minor', 'pin', 'digest', 'lockFileMaintenance', 'rollback', 'bump'],
      enabled: false,
    },
    /** Monthly update on stabilization branches */
    {
      matchBaseBranches: ['/[1-9]\\..*/', '/release_.*/'],
      schedule: ['on the 1st day of the month'],
    },
    /** Disable upgrading the supported Python version */
    {
      matchFileNames: ['app/pyproject.toml', 'acceptance_tests/pyproject.toml'],
      matchPackageNames: ['python'],
      enabled: false,
    },
    /** Support the 4 parts of shellcheck-py version with a v prefix */
    {
      matchPackageNames: ['shellcheck-py/shellcheck-py'],
      versioning: 'regex:^v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)\\.(?<build>\\d+)$',
    },
    /** Update dpkg versions at any time */
    {
      matchBaseBranches: ['/^[0-9]+\\.[0-9]+$/'],
      matchPaths: ['^ci/dpkg\\-versions\\.yaml$'],
      schedule: ['at any time'],
      groupName: 'dpkg',
      automerge: true,
    },
  ],
}
