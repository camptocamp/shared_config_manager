[tool.mypy]
python_version = "3.9"
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict = true

[tool.poetry]
name = "shared-config-manager"
version = "0.0.0"
description = "Not used"
authors = []

[tool.poetry.dependencies]
python = ">=3.9,<3.11"
PyYAML = "6.0.1"
inotify = "0.2.10"
c2cwsgiutils = { version = "6.0.4", extras = ["broadcast", "standard", "oauth2", "debug"] }
pyramid-mako = "1.1.0"

[tool.poetry.dev-dependencies]
prospector = { extras = ["with_mypy", "with_bandit"], version = "1.10.3" }
pytest-cov = "4.1.0"
types-pyyaml = "6.0.12.12"
types-requests = "2.31.0.10"
typing-extensions = "4.9.0"

[tool.poetry.scripts]
shared-config-slave = "shared_config_manager.scripts.shared_config_slave:main"

[tool.poetry.plugins."paste.app_factory"]
main = "shared_config_manager.app:main"


[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^(?P<base>\\d+(\\.\\d+)*)"
format-jinja = """
{%- if env.get("VERSION_TYPE") == "version_branch" -%}
{{serialize_pep440(bump_version(base, 1 if env.get("IS_MASTER") == "TRUE" else 2), dev=distance)}}
{%- elif distance == 0 -%}
{{serialize_pep440(base)}}
{%- else -%}
{{serialize_pep440(bump_version(base), dev=distance)}}
{%- endif -%}
"""

[tool.poetry-plugin-tweak-dependencies-version]
default = "present"
[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning", "poetry-plugin-tweak-dependencies-version", "poetry-plugin-drop-python-upper-constraint"]
build-backend = "poetry.core.masonry.api"
